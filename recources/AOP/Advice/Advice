<?xml version="1.0" encoding="UTF-8"?>
<beans
xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:aop="http://www.springframework.org/schema/aop"
xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <!-- config target class -->
    <bean id="helloWorldService" class="AOP.Advice.HelloWorldService"/>

    <!-- config aspects -->
    <bean id="aspect" class="AOP.Advice.HelloWorldAdvice"/>
    <aop:config>
        <aop:aspect ref="aspect">
            <aop:before pointcut="execution(* AOP.Advice..*.sayBefore(..)) and args(param)"
                               method="beforeAdvice(java.lang.String)"
                               arg-names="param"/>

            <aop:after-returning pointcut="execution(* AOP.Advice..*.sayAfterReturning(..))"
                                            method="afterReturningAdvice"
                                           arg-names="retVal"
                                           returning="retVal"/>

            <aop:after-throwing pointcut="execution(* AOP.Advice..*.sayAfterThrowing(..))"
                                            method="afterThrowingAdvice"
                                            arg-names="exception"
                                            throwing="exception"/>

            <aop:after pointcut="execution(* AOP.Advice..*.sayAfterFinally(..))"
                     method="afterFinallyAdvice"/>

            <aop:around pointcut="execution(* AOP.Advice..*.sayAround(..))"
                       method="aroundAdvice"/>

        </aop:aspect>
    </aop:config>

</beans>